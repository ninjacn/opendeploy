# -*- coding: utf-8 -*-
# Generated by Django 1.11.17 on 2019-01-05 15:35
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('cmdb', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Credentials',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('type', models.IntegerField(choices=[(1, '用户名和密码'), (2, '用户名和私钥')], default=1)),
                ('username', models.CharField(default='', max_length=255, verbose_name='用户名')),
                ('password', models.CharField(default='', max_length=255, verbose_name='密码')),
                ('private_key', models.TextField(default='', verbose_name='私钥')),
                ('comment', models.CharField(default='', max_length=255, verbose_name='备注')),
            ],
            options={
                'verbose_name': '认证凭证',
                'verbose_name_plural': '认证凭证',
                'db_table': 'deploy_credentials',
            },
        ),
        migrations.CreateModel(
            name='Env',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('comment', models.CharField(default='', max_length=255)),
            ],
            options={
                'verbose_name': '环境',
                'verbose_name_plural': '环境',
                'db_table': 'deploy_env',
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=255, null=True, unique=True, verbose_name='名称')),
                ('vcs_type', models.CharField(choices=[('git', 'GIT'), ('svn', 'SVN')], default='git', max_length=255, verbose_name='仓库类型')),
                ('repository_url', models.CharField(max_length=255, verbose_name='仓库地址')),
                ('dest_path', models.CharField(default='', max_length=255, verbose_name='项目路径')),
                ('comment', models.CharField(blank=True, default='', max_length=255, null=True, verbose_name='备注')),
                ('deploy_mode', models.CharField(choices=[('0', '增量'), ('1', '全量')], default='0', max_length=2, verbose_name='部署模式')),
                ('dingding_robot_webhook', models.URLField(blank=True, default='', max_length=255, null=True, verbose_name='钉钉机器人webhook')),
                ('status', models.CharField(choices=[('1', '启用'), ('0', '禁用')], default='1', max_length=2, verbose_name='状态')),
                ('exclude_file', models.TextField(blank=True, default='', null=True, verbose_name='排除文件')),
                ('credentials', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='credentials', to='deploy.Credentials')),
            ],
            options={
                'verbose_name': '项目',
                'verbose_name_plural': '项目',
                'db_table': 'deploy_project',
            },
        ),
        migrations.CreateModel(
            name='ProjectEnvConfig',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('branch', models.CharField(default='master', max_length=255, null=True, verbose_name='分支名')),
                ('before_hook', models.TextField(default='', verbose_name='发布前钩子')),
                ('after_hook', models.TextField(default='', verbose_name='发布后钩子')),
                ('env', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='deploy.Env')),
                ('host_group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='cmdb.HostGroup')),
                ('project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='deploy.Project')),
            ],
            options={
                'verbose_name': '项目环境配置',
                'verbose_name_plural': '项目环境配置',
                'db_table': 'deploy_project_env_config',
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('status', models.IntegerField(choices=[(0, '待发布'), (1, '正在发布'), (2, '发布成功'), (3, '发布失败')], default=0, verbose_name='状态')),
                ('status_rollback', models.IntegerField(choices=[(0, '待回滚'), (2, '回滚成功'), (3, '回滚失败')], default=0, verbose_name='回滚状态')),
                ('comment', models.CharField(default='', max_length=255, verbose_name='备注')),
                ('creater', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user', to=settings.AUTH_USER_MODEL)),
                ('env', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='env', to='deploy.Env')),
                ('project', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='project', to='deploy.Project')),
            ],
            options={
                'verbose_name': '任务',
                'verbose_name_plural': '任务',
                'db_table': 'deploy_task',
            },
        ),
        migrations.CreateModel(
            name='TaskHostRela',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('host', models.CharField(default='', max_length=255, verbose_name='host or ip')),
                ('status_release', models.IntegerField(choices=[(1, '发布成功'), (2, '发布失败')], default=0, verbose_name='发布状态')),
                ('status_rollback', models.IntegerField(choices=[(1, '回滚成功'), (2, '回滚失败')], default=0, verbose_name='回滚状态')),
                ('task', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='deploy.Task')),
            ],
            options={
                'db_table': 'deploy_task_host_rela',
            },
        ),
    ]
